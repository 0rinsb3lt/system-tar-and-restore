#!/bin/bash

clear

while getopts "r:s:b:h:f:u:n:p:y" arg; do
  case $arg in
    r) 
      root=$OPTARG
      fsystem=(`blkid -s TYPE -o value $root`)
    ;;
    s) 
      swap=$OPTARG
    ;;
    b) 
      boot=$OPTARG
      bootfsystem=(`blkid -s TYPE -o value $boot`)
    ;;
    h) 
      home=$OPTARG
      homefsystem=(`blkid -s TYPE -o value $home`)
    ;;
    f) 
      file=$OPTARG
    ;;
    u) 
      url=$OPTARG
      urlflag=true
    ;;
    n) 
      USERNAME=$OPTARG
    ;;
    p) 
      PASSWORD=$OPTARG
    ;;
    y) 
      def="y"
    ;;
    \?)
      echo "Usage: ./restore -r [root partition] -s [swap partition] -b [boot partition]"
      echo -e "\t\t-h [home partition] -f [backup file path] -u [url] -n [username] -p [password]"
      exit
    ;;
  esac
done

if [ -n $file ]; then
  cp $file "/media/target/fullbackup.tgz"
fi

if [ -n $url ]; then
  if [ -n $USERNAME ]; then
    wget --user=$USERNAME --password=$PASSWORD -O /media/target/fullbackup.tgz  $url --tries=2
  else
    wget -O /media/target/fullbackup.tgz  $url --tries=2
  fi
fi

if [ $(id -u) -gt 0 ]; then
  echo "Please run the script as root. Exit"
  exit
fi

IFS=$'\n'
PS3="Choice: "

echo "`date +%A-%d-%m-%Y-%R`"

echo -e "\n---------------READING INPUT VARIABLES---------------"

list=(`for f in /dev/[hs]d[a-z][0-9]; do echo -e "$f $(blkid -s TYPE -o value $f) $(lsblk -d -n -o size $f)\r"; done`)

while [ -z "$root" ]; do
  echo -e "\nSelect the number of your root partition or enter Q to quit"
  select c in ${list[@]}; do
    if [ $REPLY = "q" ] || [ $REPLY = "Q" ]; then
      echo "Now quiting"
      exit
    elif [[ $REPLY = [0-9]* ]] && [ $REPLY -gt 0 ] && [ $REPLY -le ${#list[@]} ]; then
      root=(`echo $c | awk '{ print $1 }'`)
      fsystem=(`echo $c | awk '{ print $2 }'`)
      echo "You selected $root as your root partition" 
      echo "The filesystem is $fsystem"
      break
    else
      echo "Please select a valid option from the list or enter Q to quit"
    fi
  done  
done

if [ -z $swap ]; then
  echo -e "\n(Optional - Press C to skip) Select the number of your swap partition (for fstab) or enter Q to quit"
  select c in ${list[@]}; do
    if [ $REPLY = "q" ] || [ $REPLY = "Q" ]; then
      echo "Now quiting"
      exit
    elif [[ $REPLY = [0-9]* ]] && [ $REPLY -gt 0 ] && [ $REPLY -le ${#list[@]} ]; then
      swap=(`echo $c | awk '{ print $1 }'`)
      echo "You selected $swap as your swap partition" 
      break
    elif [ $REPLY = "c" ] || [ $REPLY = "C" ]; then
      echo "No swap"
      break
    else
      echo "Please select a valid option from the list or enter Q to quit"
    fi
  done
fi



if [ -z $home ]; then
  echo -e "\n(Optional - Press C to skip) Select the number of your home partition (for fstab) or enter Q to quit"
  select c in ${list[@]}; do
    if [ $REPLY = "q" ] || [ $REPLY = "Q" ]; then
      echo "Now quiting"
      exit
    elif [[ $REPLY = [0-9]* ]] && [ $REPLY -gt 0 ] && [ $REPLY -le ${#list[@]} ]; then
      home=(`echo $c | awk '{ print $1 }'`)
      homefsystem=(`echo $c | awk '{ print $2 }'`)
      echo "You selected $home as your home partition" 
      echo "The filesystem is $homefsystem" 
      break
    elif [ $REPLY = "c" ] || [ $REPLY = "C" ]; then
      echo "No separate home"
      break
    else
      echo "Please select a valid option from the list or enter Q to quit"
    fi
  done
fi

if [ -z $boot ]; then
  echo -e "\n(Optional - Press C to skip) Select the number of your boot partition (for fstab) or enter Q to quit"
  select c in ${list[@]}; do
    if [ $REPLY = "q" ] || [ $REPLY = "Q" ]; then
      echo "Now quiting"
      exit
    elif [[ $REPLY = [0-9]* ]] && [ $REPLY -gt 0 ] && [ $REPLY -le ${#list[@]} ]; then
      boot=(`echo $c | awk '{ print $1 }'`)
      bootfsystem=(`echo $c | awk '{ print $2 }'`)
      echo "You selected $boot as your boot partition" 
      echo "The filesystem is $bootfsystem" 
      break
    elif [ $REPLY = "c" ] || [ $REPLY = "C" ]; then
      echo "No separate boot"
      break
    else
      echo "Please select a valid option from the list or enter Q to quit"
    fi
  done
fi

while [ -z "$grub" ]; do
  list=(`for f in /dev/[hs]d[a-z]; do echo -e "$f $(blkid -s TYPE -o value $f) $(lsblk -d -n -o size $f)\r"; done`)

  echo -e "\nWhere to install GRUB? Enter Q to quit"
  select c in ${list[@]}; do
    if [ $REPLY = "q" ] || [ $REPLY = "Q" ]; then
      echo "Now quiting"
      exit
    elif [[ $REPLY = [0-9]* ]] && [ $REPLY -gt 0 ] && [ $REPLY -le ${#list[@]} ]; then
      grub=(`echo $c | awk '{ print $1 }'`)
      echo "You selected $grub to install GRUB"  
      break
    else
      echo "Please select a valid option from the list or enter Q to quit"
    fi
  done
done

echo -e "\n---------------MAKING WORKING DIRECTORY---------------"

mkdir /media/target  2>&1 && echo SUCCESS  || echo WARNING
sleep 1

echo -e "\n---------------MOUNTING $root (/)---------------"

mount $root /media/target  2>&1 && echo SUCCESS  || echo WARNING

if [   -n "$home" ]; then
  echo -e "\n---------------MOUNTING $home (/home)---------------"
  mkdir /media/target/home
  mount $home /media/target/home  2>&1 && echo SUCCESS  || echo WARNING
fi

if [   -n "$boot" ]; then
  echo -e "\n---------------MOUNTING $boot (/boot)---------------"
  mkdir /media/target/boot
  mount $boot /media/target/boot  2>&1 && echo SUCCESS  || echo WARNING
fi

echo -e "\n---------------GETTING TAR IMAGE---------------"

while [ ! -f /media/target/fullbackup.tgz ]; do
    
  echo -e "\nSelect an option or enter Q to quit"
  select c in "File" "URL" "Protected URL"; do
    if [ $REPLY = "q" ] || [ $REPLY = "Q" ]; then
      echo "Now quiting"
      exit      
    elif [ $REPLY = "1" ]; then
      while [ ! -f /media/target/fullbackup.tgz ]; do
	read -p "Enter the path of the backup file: " file
	if [ ! -f $file ] || [ -z $file ]; then
	  echo "File not found"
	else
	  cp $file "/media/target/fullbackup.tgz" 2>&1
	fi
      done
      break
      
    elif [ $REPLY = "2" ] || [ $REPLY = "3" ]; then
      read -p "Enter the URL for the backup file: " url
      echo " "
      if [ $REPLY = "3" ]; then
	read -p "Enter the username: " USERNAME
	read -sp "Enter the password: " PASSWORD
	echo " "
	wget --user=$USERNAME --password=$PASSWORD $url --tries=2 2>&1 |   \sed -u 's/^.* \+\([0-9]\+%\) \+\([0-9.]\+[GMKB]\) \+\([0-9hms.]\+\).*$/\1\n# Downloading... \2 (\3)/'
	echo -e "\nDownloaded file: `pwd`/$file"
	break
      fi
      wget $url  2>&1 |  \sed -u 's/^.* \+\([0-9]\+%\) \+\([0-9.]\+[GMKB]\) \+\([0-9hms.]\+\).*$/\1\n# Downloading... \2 (\3)/'
      echo -e "\nDownloaded file: `pwd`/$file"
      break
    else
      echo "Please select a valid option from the list or enter Q to quit"
    fi
  done
done

echo -e "\nRoot Partition: $root $fsystem"
echo "Swap Partition: $swap"
echo "Boot Partition: $boot $bootfsystem"
echo "Home Partition: $home $homefsystem"

if [ $urlflag =:false ]; then
  echo -e "Backup File: $file\n"
else
  echo -e "Backup File from URL: $url\n"
fi  
  
read -p "Do you want continue? (Y/n): " def

if [ $def = "n" ] || [ $def = "N" ]; then

  echo -e "\n---------------CLEANING AND UNMOUNTING---------------"
  cd ~ 
  if [ -n "$home" ]; then
    umount  $home
    rm -r /media/target/home
  fi
  if [ -n "$boot" ]; then
    umount  $boot
    rm -r /media/target/boot
  fi
  rm /media/target/fullbackup.tgz
  umount $root 
  sleep 1
  rm  -r /media/target 2>&1 && echo SUCCESS  || echo FAILED 
  exit
  
fi  

echo "5" ; sleep 1
echo "# Starting up" ; sleep 1
echo "10" ; sleep 1
echo "# Extracting files in $root..." ; sleep 1

echo -e "\n---------------EXTRACTING---------------"
cd /media/target
tar xvpfz fullbackup.tgz -C /media/target   2>&1 && echo SUCCESS  || echo WARNING  
cd ~ 

echo "50" ; sleep 1
echo "# Mounting /dev /proc and /sys" ; sleep 1

echo -e "\n---------------MOUNTING /dev /proc /sys---------------"
mount --bind /dev /media/target/dev
mount -t proc /proc /media/target/proc
mount -t sysfs /sys /media/target/sys 2>&1 && echo SUCCESS  || echo FAILED

echo "60" ; sleep 1
echo "\n---------------INSTALLING AND UPDATING GRUB 2 IN $grub---------------"
chroot /media/target grub-install --target=i386-pc  $grub 
cp /media/target/usr/share/locale/en\@quot/LC_MESSAGES/grub.mo /media/target/boot/grub/locale/en.mo 
chroot /media/target grub-mkconfig -o /boot/grub/grub.cfg  2>&1 && echo SUCCESS  || echo FAILED 

echo "70" ; sleep 1
echo "# Ganerating fstab..." ; sleep 1
echo  "tmpfs     /tmp          tmpfs     nodev,nosuid      0  0" > /media/target/etc/fstab 
echo "$root  /  $fsystem  defaults,noatime    0  1" >> /media/target/etc/fstab

if [ -n "$swap" ]; then
  echo "$swap    swap   swap    defaults    0  0" >> /media/target/etc/fstab
fi

if [ -n "$home" ]; then
  echo "$home  /home  $homefsystem  defaults,noatime    0  2" >> /media/target/etc/fstab
fi

if [ -n "$boot" ]; then
  echo "$boot  /boot  $bootfsystem  defaults    0  1" >> /media/target/etc/fstab
fi

sed -n 's|^/dev/\([sh]d[a-z][0-9]\).*|\1|p' </media/target/etc/fstab > /media/target/etc/fstab2

while read LINE; do   
  UUID=`ls -l /dev/disk/by-uuid | grep "$LINE" | sed -n 's/^.* \([^ ]*\) -> .*$/\1/p'`
  sed -i "s|^/dev/${LINE}|UUID=${UUID}|" /media/target/etc/fstab
done </media/target/etc/fstab2
  
rm /media/target/etc/fstab2

echo -e "\n---------------READING GENERATED FSTAB---------------"
cat /media/target/etc/fstab

echo "80" ; sleep 1
echo "# Building initramfs image..." ; sleep 1

echo -e "\n---------------BUILDING INITRAMFS IMAGE---------------"
chroot /media/target mkinitcpio -p linux  2>&1 && echo SUCCESS  || echo WARNING

echo "90" ; sleep 1
echo "# Ganerating locales..." ; sleep 1

echo -e "\n---------------GENERATING LOCALES---------------"
chroot /media/target  locale-gen   2>&1 && echo SUCCESS || echo FAILED

echo "100" ; sleep 1
echo "# Done." ; sleep 1 

echo -e "\nCompleted. Press ENTER to unmount and clean, then reboot your system." 
read -s a

sleep 2


echo -e "\n---------------CLEANING AND UNMOUNTING---------------"

cd ~

if [ -n "$home" ]; then
  umount  $home
fi

if [ -n "$boot" ]; then
  umount  $boot
fi

umount /media/target/dev
umount /media/target/proc
umount /media/target/sys
rm /media/target/fullbackup.tgz 
umount $root
sleep 1
rm  -r /media/target  2>&1 && echo SUCCESS  || echo FAILED


