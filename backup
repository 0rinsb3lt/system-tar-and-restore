#!/bin/bash

clear

while getopts "d:h" arg; do
  case $arg in
    d) 
      BRFOLDER=$OPTARG
    ;;
    h)
      BRhome="n"
    ;;
    \?) 
      echo "Usage: $0 -d [path for backup folder]
      -h (exclude home)"
      exit
    ;;
  esac
done

if [ $(id -u) -gt 0 ]; then
  echo "Please run the script as root. Exit"
  exit
fi

if [ ! -d "/boot/grub/" ]; then
  echo "Cannot find grub, aborting."
  exit
fi

if [ -z "$BRFOLDER" ]; then

echo "This script will make a full tar backup image of your entire system"
echo "Make sure you have enough free space"
echo "Press ENTER and select the location where the backup file will be created" 
read -s a

echo -e "\nThe default folder for creating the backup file is / (root)" 
fi

while [ -z "$BRFOLDER" ]; do

  read -p "Do you want to save in the default folder? (Y/n): " an

  if [ -n "$an" ]; then
    def=$an
  else
    def="y"
  fi
  
  if [ $def = "y" ] || [ $def = "Y" ]; then
    BRFOLDER="/"
  elif [ $def = "n" ] || [ $def = "N" ]; then
    read -p "Insert the folder path where the backup will be created: " BRFOLDER
  else
    echo -e "Please enter a valid option\n"
  fi
done  

while [ -z "$BRhome" ]; do
  
  echo " "
  read -p "Do you want to include home? (Y/n): " an

  if [ -n "$an" ]; then
    def=$an
  else
    def="y"
  fi
  
  if [ $def = "y" ] || [ $def = "Y" ]; then
    BRhome="y"
  elif [ $def = "n" ] || [ $def = "N" ]; then
    BRhome="n"
  else
    echo -e "Please enter a valid option\n"
  fi
done  

while [ -z "$BRtar" ]; do
  
  echo " "
  read -p "Are you going to use fedora's patched tar? (Y/n): " an

  if [ -n "$an" ]; then
    def=$an
  else
    def="y"
  fi
  
  if [ $def = "y" ] || [ $def = "Y" ]; then
    BRtar="y"
  elif [ $def = "n" ] || [ $def = "N" ]; then
    BRtar="n"
  else
    echo -e "Please enter a valid option\n"
  fi
done  


BRFOLDER=(`echo ${BRFOLDER}/$(date +%A-%d-%m-%Y) | sed 's://*:/:g'`)

echo "Preparing"
mkdir -p $BRFOLDER
touch $BRFOLDER/log
touch $BRFOLDER/errors

sleep 1
echo "Creating backup image, please wait"

BRFile=$BRFOLDER/Backup-"`date +%A-%d-%m-%Y-%T`"

if [ $BRhome = "n" ] &&  [ $BRtar = "n" ]; then
  tar cvpf  $BRFile.tar  --sparse --exclude=/home --exclude=/run/*  --exclude=/lost+found --exclude=/dev/* --exclude=/proc/* --exclude=/sys/* --exclude=/boot/grub/* --exclude=/media/* --exclude=/tmp/* --exclude=/mnt/* --exclude=.gvfs  --exclude=$BRFOLDER / 2>>$BRFOLDER/errors | tee $BRFOLDER/log 
  find /home -maxdepth 2 -name ".*" -print | xargs tar rvf $BRFile.tar 2>>$BRFOLDER/errors | tee $BRFOLDER/log
  gzip $BRFile.tar
elif [ $BRhome = "y" ] &&  [ $BRtar = "n" ]; then
  tar cvpzf  $BRFile.tgz  --sparse --exclude=/run/*  --exclude=/lost+found --exclude=/dev/* --exclude=/proc/* --exclude=/sys/* --exclude=/boot/grub/* --exclude=/media/* --exclude=/tmp/* --exclude=/mnt/* --exclude=.gvfs  --exclude=$BRFOLDER / 2>>$BRFOLDER/errors | tee $BRFOLDER/log 
elif [ $BRhome = "n" ] &&  [ $BRtar = "y" ]; then
  tar cvpf  $BRFile.tar  --sparse  --acls  --selinux --xattrs --exclude=/home --exclude=/run/*  --exclude=/lost+found --exclude=/dev/* --exclude=/proc/* --exclude=/sys/* --exclude=/boot/grub/* --exclude=/media/* --exclude=/tmp/* --exclude=/mnt/* --exclude=.gvfs  --exclude=$BRFOLDER / 2>>$BRFOLDER/errors | tee $BRFOLDER/log 
  find /home -maxdepth 2 -name ".*" -print | xargs tar rvf $BRFile.tar 2>>$BRFOLDER/errors | tee $BRFOLDER/log
  gzip $BRFile.tar
elif [ $BRhome = "y" ] &&  [ $BRtar = "y" ]; then
  tar cvpzf  $BRFile.tgz  --sparse --acls  --selinux --xattrs --exclude=/run/*  --exclude=/lost+found --exclude=/dev/* --exclude=/proc/* --exclude=/sys/* --exclude=/boot/grub/* --exclude=/media/* --exclude=/tmp/* --exclude=/mnt/* --exclude=.gvfs  --exclude=$BRFOLDER / 2>>$BRFOLDER/errors | tee $BRFOLDER/log 
fi

echo "Setting permissions"
chmod ugo+rw -R "${BRFOLDER[@]}" 2>> $BRFOLDER/errors

echo "Done. Tar image and logs saved in $BRFOLDER"
