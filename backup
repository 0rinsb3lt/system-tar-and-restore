#!/bin/bash

clear

BRargs=`getopt -o "i:d:hfn" -l "interface:,directory:,exclude-home,fedora-tar,no-hidden,help" -n "$1" -- "$@"`

if [ $? -ne 0 ];
then
  echo "See $0 --help"
  exit 
fi

eval set -- "$BRargs";

while true; do
  case "$1" in
    -i|--interface)
      BRinterface=$2
      shift 2
    ;;
    -d|--directory)
      BRFOLDER=$2
      shift 2
    ;;
    -h|--exclude-home) 
      BRhome="n"
      shift
    ;;
    -f|--fedora-tar) 
      BRtar="y"
      shift
    ;;
    -n|--no-hidden)
      BRhidden="n"
      shift
    ;;
    --help)
      echo "
-i, --interface         interface to use
-d, --directory		path for backup folder
-h, --exclude-home	exclude home, include only hidden files and folders
-f, --fedora-tar	activate --acls  --selinux --xattrs options

--help	print this page
"
      exit
      shift
    ;;  
    --)
      shift
      break
    ;;
  esac
done

if [ $(id -u) -gt 0 ]; then
  echo "Please run the script as root. Exit"
  exit
fi

interfaces=(CLI Dialog)

while [ -z "$BRinterface" ]; do
  echo -e "\nSelect interface or enter Q to quit"
  select c in ${interfaces[@]}; do
    if [ $REPLY = "q" ] || [ $REPLY = "Q" ]; then
      echo "Now quiting"
      exit
    elif [[ $REPLY = [0-9]* ]] && [ $REPLY -gt 0 ] && [ $REPLY -le ${#interfaces[@]} ]; then
      BRinterface=$c
      break
    else
      echo "Please select a valid option from the list or enter Q to quit"
    fi
  done
done

if [ $BRinterface = "CLI" ]; then

if [ -z "$BRFOLDER" ]; then

echo "This script will make a full tar backup image of your entire system."
echo "Make sure you have GRUB or SYSLINUX packages installed.
GRUB Packages:
-->Arch: grub-bios
-->Debian: grub-pc
-->Fedora: grub2
SYSLINUX Packages:
-->Arch: syslinux
-->Debian: syslinux extlinux
-->Fedora: syslinux syslinux-extlinux"
echo "Make sure you have enough free space."
echo "Press ENTER and select the location where the backup file will be created." 
read -s a

echo -e "\nThe default folder for creating the backup file is / (root)" 
fi

if [ ! -d "$BRFOLDER" ] && [ -n "$BRFOLDER" ]; then
    echo "Directory does not exist."
    unset BRFOLDER
fi

while [ -z "$BRFOLDER" ]; do
  read -p "Do you want to save in the default folder? (Y/n): " an

  if [ -n "$an" ]; then
    def=$an
  else
    def="y"
  fi
  
  if [ $def = "y" ] || [ $def = "Y" ]; then
    BRFOLDER="/"
  elif [ $def = "n" ] || [ $def = "N" ]; then
    while [  -z "$BRFOLDER" ] || [ ! -d "$BRFOLDER" ]; do
      read -p "Insert the folder path where the backup will be created: " BRFOLDER
      if [ ! -d "$BRFOLDER" ]; then
        echo "Directory does not exist."
      fi
    done 
  fi
done 

while [ -z "$BRhome" ] ; do
  
  echo " "
  read -p "Do you want to include home?  (Y/n): " an

  if [ -n "$an" ]; then
    def=$an
  else
    def="y"
  fi
  
  if [ $def = "y" ] || [ $def = "Y" ]; then
    BRhome="y"
  elif [ $def = "n" ] || [ $def = "N" ]; then
    BRhome="n"
  else
    echo -e "Please enter a valid option\n"
  fi
done  

if [ $BRhome = "n" ]; then
  while [ -z "$BRhidden" ] ; do
    read -p "Do you want to keep hidden files and folders inside /home?  (Y/n): " an

    if [ -n "$an" ]; then
      def=$an
    else
      def="y"
    fi

    if [ $def = "y" ] || [ $def = "Y" ]; then
      BRhidden="y"
    elif [ $def = "n" ] || [ $def = "N" ]; then
      BRhidden="n"
    else
      echo -e "Please enter a valid option\n"
    fi 
  done
fi

while [ -z "$BRtar" ]; do
  
  echo " "
  read -p "Activate --acls  --selinux --xattrs options? (Required / Available only in Fedora) (y/N): " an

  if [ -n "$an" ]; then
    def=$an
  else
    def="n"
  fi
  
  if [ $def = "y" ] || [ $def = "Y" ]; then
    BRtar="y"
  elif [ $def = "n" ] || [ $def = "N" ]; then
    BRtar="n"
  else
    echo -e "Please enter a valid option\n"
  fi
done  

echo " "

echo "SYMMARY  
Backup Folder = $BRFOLDER
Include Home Directory = $BRhome
Keep hidden files and folders inside /home = $BRhidden
Activated Fedora's tar options = $BRtar"

echo " "

if [ -z $defcon ]; then
  read -p "Do you want continue? (Y/n): " defcon
fi

if [ "x$defcon" = "xn" ] || [ "x$defcon" = "xN" ]; then
  exit
fi

BRFOLDER=(`echo ${BRFOLDER}/$(date +%A-%d-%m-%Y) | sed 's://*:/:g'`)

echo "Preparing"
mkdir -p $BRFOLDER
touch $BRFOLDER/log
touch $BRFOLDER/errors

sleep 1
echo "Creating backup image, please wait"

BRFile=$BRFOLDER/Backup-"`date +%A-%d-%m-%Y-%T`"

if [ $BRhome = "n" ] &&  [ $BRhidden = "y" ] &&  [ $BRtar = "n" ]; then
  tar cvpf  $BRFile.tar  --sparse --exclude=/home --exclude=/run/*  --exclude=/lost+found --exclude=/dev/* --exclude=/proc/* --exclude=/sys/* --exclude=/boot/grub/* --exclude=/media/* --exclude=/tmp/* --exclude=/mnt/* --exclude=.gvfs  --exclude=$BRFOLDER / 2>>$BRFOLDER/errors | tee $BRFOLDER/log 
  find /home -maxdepth 1 -print | xargs tar rpvf $BRFile.tar --no-recursion 2>>$BRFOLDER/errors | tee $BRFOLDER/log
  find /home -maxdepth 2 -name ".*" -print | xargs tar rpvf $BRFile.tar 2>>$BRFOLDER/errors | tee $BRFOLDER/log
  gzip $BRFile.tar
elif [ $BRhome = "n" ] &&  [ $BRhidden = "n" ] &&  [ $BRtar = "n" ]; then
  tar cvpzf  $BRFile.tgz  --sparse --exclude=/home/* --exclude=/run/*  --exclude=/lost+found --exclude=/dev/* --exclude=/proc/* --exclude=/sys/* --exclude=/boot/grub/* --exclude=/media/* --exclude=/tmp/* --exclude=/mnt/* --exclude=.gvfs  --exclude=$BRFOLDER / 2>>$BRFOLDER/errors | tee $BRFOLDER/log 
elif [ $BRhome = "y" ] &&  [ $BRtar = "n" ]; then
  tar cvpzf  $BRFile.tgz  --sparse --exclude=/run/*  --exclude=/lost+found --exclude=/dev/* --exclude=/proc/* --exclude=/sys/* --exclude=/boot/grub/* --exclude=/media/* --exclude=/tmp/* --exclude=/mnt/* --exclude=.gvfs  --exclude=$BRFOLDER / 2>>$BRFOLDER/errors | tee $BRFOLDER/log 
elif [ $BRhome = "n" ] &&  [ $BRhidden = "y" ] &&  [ $BRtar = "y" ]; then
  tar cvpf  $BRFile.tar  --sparse  --acls  --selinux --xattrs --exclude=/home --exclude=/run/*  --exclude=/lost+found --exclude=/dev/* --exclude=/proc/* --exclude=/sys/* --exclude=/boot/grub/* --exclude=/media/* --exclude=/tmp/* --exclude=/mnt/* --exclude=.gvfs  --exclude=$BRFOLDER / 2>>$BRFOLDER/errors | tee $BRFOLDER/log 
  find /home -maxdepth 1 -print | xargs tar rpvf $BRFile.tar --no-recursion 2>>$BRFOLDER/errors | tee $BRFOLDER/log
  find /home -maxdepth 2 -name ".*" -print | xargs tar rpvf $BRFile.tar 2>>$BRFOLDER/errors | tee $BRFOLDER/log
  gzip $BRFile.tar
elif [ $BRhome = "n" ] &&  [ $BRhidden = "n" ] &&  [ $BRtar = "y" ]; then
    tar cvpzf  $BRFile.tgz  --sparse --acls  --selinux --xattrs --exclude=/home/* --exclude=/run/*  --exclude=/lost+found --exclude=/dev/* --exclude=/proc/* --exclude=/sys/* --exclude=/boot/grub/* --exclude=/media/* --exclude=/tmp/* --exclude=/mnt/* --exclude=.gvfs  --exclude=$BRFOLDER / 2>>$BRFOLDER/errors | tee $BRFOLDER/log 
elif [ $BRhome = "y" ] &&  [ $BRtar = "y" ]; then
  tar cvpzf  $BRFile.tgz  --sparse --acls  --selinux --xattrs --exclude=/run/*  --exclude=/lost+found --exclude=/dev/* --exclude=/proc/* --exclude=/sys/* --exclude=/boot/grub/* --exclude=/media/* --exclude=/tmp/* --exclude=/mnt/* --exclude=.gvfs  --exclude=$BRFOLDER / 2>>$BRFOLDER/errors | tee $BRFOLDER/log 
fi

echo "Setting permissions"
chmod ugo+rw -R "${BRFOLDER[@]}" 2>> $BRFOLDER/errors

echo "Done. Tar image and logs saved in $BRFOLDER"

elif [ $BRinterface = "Dialog" ]; then

if [ -z $(which dialog 2> /dev/null) ];then
 echo "Package dialog is not installed. Install the package and re-run the script."
 exit
fi

if [ -z "$BRFOLDER" ]; then

dialog --no-ok --title "Info" --msgbox  "This script will make a full tar backup image of your entire system.
Make sure you have GRUB or SYSLINUX packages installed.
GRUB Packages:
-->Arch: grub-bios
-->Debian: grub-pc
-->Fedora: grub2
SYSLINUX Packages:
-->Arch: syslinux
-->Debian: syslinux extlinux
-->Fedora: syslinux syslinux-extlinux
Make sure you have enough free space.
Press OK and select the location where the backup file will be created." 18 100

fi

if [ ! -d "$BRFOLDER" ] &&  [ -n "$BRFOLDER" ]; then
    echo "Directory does not exist." | dialog --progressbox "ERROR" 30 70
    sleep 2
    unset BRFOLDER
fi

while [ -z "$BRFOLDER" ]; do
  dialog --default-button Yes --title "Message" --yesno "The default folder for creating the backup file is / (root)
Do you want to save in the default folder?" 8 50
  if [ $? = "0" ]; then
    BRFOLDER="/"
  else
  while [  -z "$BRFOLDER" ] || [ ! -d "$BRFOLDER" ]; do
    exec 3>&1 
    BRFOLDER=$(dialog  --no-cancel --inputbox "Insert the folder path where the backup will be created" 8 50 2>&1 1>&3)  
    if [ ! -d "$BRFOLDER" ]; then
      echo "Directory does not exist." | dialog --progressbox "ERROR" 30 70
      sleep 2
    fi
  done 
   fi
done 

while [ -z "$BRhome" ]; do
  dialog --default-button Yes --title "Message"  --yesno "Do you want to include home?" 8 50
  if [ $? = "0" ]; then
    BRhome="y"
  else
    BRhome="n"
  fi
done  

if [ $BRhome = "n" ]; then
  while [ -z "$BRhidden" ] ; do
    dialog --default-button Yes --title "Message"  --yesno "Do you want to keep hidden files and folders inside /home?" 8 50
    if [ $? = "0" ]; then
      BRhidden="y"
    else
      BRhidden="n"
    fi
  done
fi

while [ -z "$BRtar" ]; do
  dialog --default-button No --title "Message"  --yesno "Activate --acls  --selinux --xattrs options? (Required / Available only in Fedora)" 8 50
  if [ $? = 0 ]; then
    BRtar="y"
  else
    BRtar="n"
  fi
done  

dialog --title "Symmary"  --yesno "Backup Folder = $BRFOLDER
Include Home Directory = $BRhome
Keep hidden files and folders inside /home = $BRhidden
Activated Fedora's tar options = $BRtar
------------------------------------
Press Yes to continue or No to abort." 10 50

if [ $? = "1" ]; then
  exit
fi

BRFOLDER=(`echo ${BRFOLDER}/$(date +%A-%d-%m-%Y) | sed 's://*:/:g'`)

mkdir -p $BRFOLDER
touch $BRFOLDER/log
touch $BRFOLDER/errors

sleep 1

BRFile=$BRFOLDER/Backup-"`date +%A-%d-%m-%Y-%T`"

(if [ $BRhome = "n" ] &&  [ $BRhidden = "y" ] &&  [ $BRtar = "n" ]; then
  tar cvpf  $BRFile.tar  --sparse --exclude=/home --exclude=/run/*  --exclude=/lost+found --exclude=/dev/* --exclude=/proc/* --exclude=/sys/* --exclude=/boot/grub/* --exclude=/media/* --exclude=/tmp/* --exclude=/mnt/* --exclude=.gvfs  --exclude=$BRFOLDER / 2>>$BRFOLDER/errors | tee $BRFOLDER/log 
  find /home -maxdepth 1 -print | xargs tar rpvf $BRFile.tar --no-recursion 2>>$BRFOLDER/errors | tee $BRFOLDER/log
  find /home -maxdepth 2 -name ".*" -print | xargs tar rpvf $BRFile.tar 2>>$BRFOLDER/errors | tee $BRFOLDER/log
  gzip $BRFile.tar
elif [ $BRhome = "n" ] &&  [ $BRhidden = "n" ] &&  [ $BRtar = "n" ]; then
  tar cvpzf  $BRFile.tgz  --sparse --exclude=/home/* --exclude=/run/*  --exclude=/lost+found --exclude=/dev/* --exclude=/proc/* --exclude=/sys/* --exclude=/boot/grub/* --exclude=/media/* --exclude=/tmp/* --exclude=/mnt/* --exclude=.gvfs  --exclude=$BRFOLDER / 2>>$BRFOLDER/errors | tee $BRFOLDER/log 
elif [ $BRhome = "y" ] &&  [ $BRtar = "n" ]; then
  tar cvpzf  $BRFile.tgz  --sparse --exclude=/run/*  --exclude=/lost+found --exclude=/dev/* --exclude=/proc/* --exclude=/sys/* --exclude=/boot/grub/* --exclude=/media/* --exclude=/tmp/* --exclude=/mnt/* --exclude=.gvfs  --exclude=$BRFOLDER / 2>>$BRFOLDER/errors | tee $BRFOLDER/log 
elif [ $BRhome = "n" ] &&  [ $BRhidden = "y" ] &&  [ $BRtar = "y" ]; then
  tar cvpf  $BRFile.tar  --sparse  --acls  --selinux --xattrs --exclude=/home --exclude=/run/*  --exclude=/lost+found --exclude=/dev/* --exclude=/proc/* --exclude=/sys/* --exclude=/boot/grub/* --exclude=/media/* --exclude=/tmp/* --exclude=/mnt/* --exclude=.gvfs  --exclude=$BRFOLDER / 2>>$BRFOLDER/errors | tee $BRFOLDER/log 
  find /home -maxdepth 1 -print | xargs tar rpvf $BRFile.tar --no-recursion 2>>$BRFOLDER/errors | tee $BRFOLDER/log
  find /home -maxdepth 2 -name ".*" -print | xargs tar rpvf $BRFile.tar 2>>$BRFOLDER/errors | tee $BRFOLDER/log
  gzip $BRFile.tar
elif [ $BRhome = "n" ] &&  [ $BRhidden = "n" ] &&  [ $BRtar = "y" ]; then
    tar cvpzf  $BRFile.tgz  --sparse --acls  --selinux --xattrs --exclude=/home/* --exclude=/run/*  --exclude=/lost+found --exclude=/dev/* --exclude=/proc/* --exclude=/sys/* --exclude=/boot/grub/* --exclude=/media/* --exclude=/tmp/* --exclude=/mnt/* --exclude=.gvfs  --exclude=$BRFOLDER / 2>>$BRFOLDER/errors | tee $BRFOLDER/log 
elif [ $BRhome = "y" ] &&  [ $BRtar = "y" ]; then
  tar cvpzf  $BRFile.tgz  --sparse --acls  --selinux --xattrs --exclude=/run/*  --exclude=/lost+found --exclude=/dev/* --exclude=/proc/* --exclude=/sys/* --exclude=/boot/grub/* --exclude=/media/* --exclude=/tmp/* --exclude=/mnt/* --exclude=.gvfs  --exclude=$BRFOLDER / 2>>$BRFOLDER/errors | tee $BRFOLDER/log 
fi) | dialog --progressbox "Creating backup image..." 30 70

chmod ugo+rw -R "${BRFOLDER[@]}" 2>> $BRFOLDER/errors

dialog --title "Info" --msgbox  "Done. Tar image and logs saved in $BRFOLDER" 8 50

else
  echo "Wrong interface name. Use CLI or Dialog. Exit"
fi
